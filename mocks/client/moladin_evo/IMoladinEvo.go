// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	model "bitbucket.org/moladinTech/go-lib-activity-log/model"
	mock "github.com/stretchr/testify/mock"
)

// IMoladinEvo is an autogenerated mock type for the IMoladinEvo type
type IMoladinEvo struct {
	mock.Mock
}

// Health provides a mock function with given fields: ctx
func (_m *IMoladinEvo) Health(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UserDetail provides a mock function with given fields: ctx, token
func (_m *IMoladinEvo) UserDetail(ctx context.Context, token string) (model.UserDetail, error) {
	ret := _m.Called(ctx, token)

	var r0 model.UserDetail
	if rf, ok := ret.Get(0).(func(context.Context, string) model.UserDetail); ok {
		r0 = rf(ctx, token)
	} else {
		r0 = ret.Get(0).(model.UserDetail)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIMoladinEvo interface {
	mock.TestingT
	Cleanup(func())
}

// NewIMoladinEvo creates a new instance of IMoladinEvo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIMoladinEvo(t mockConstructorTestingTNewIMoladinEvo) *IMoladinEvo {
	mock := &IMoladinEvo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

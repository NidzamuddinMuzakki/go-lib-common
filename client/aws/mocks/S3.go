// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	context "context"
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// S3 is an autogenerated mock type for the S3 type
type S3 struct {
	mock.Mock
}

// UploadFileInByte provides a mock function with given fields: ctx, path, fileName, data
func (_m *S3) UploadFileInByte(ctx context.Context, path string, fileName string, data []byte) (string, error) {
	ret := _m.Called(ctx, path, fileName, data)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string, string, []byte) string); ok {
		r0 = rf(ctx, path, fileName, data)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string, []byte) error); ok {
		r1 = rf(ctx, path, fileName, data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewS3 creates a new instance of S3. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewS3(t testing.TB) *S3 {
	mock := &S3{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

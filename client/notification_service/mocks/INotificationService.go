// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// INotificationService is an autogenerated mock type for the INotificationService type
type INotificationService struct {
	mock.Mock
}

// Health provides a mock function with given fields: ctx
func (_m *INotificationService) Health(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Send provides a mock function with given fields: ctx, message
func (_m *INotificationService) Send(ctx context.Context, message string) error {
	ret := _m.Called(ctx, message)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewINotificationService interface {
	mock.TestingT
	Cleanup(func())
}

// NewINotificationService creates a new instance of INotificationService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewINotificationService(t mockConstructorTestingTNewINotificationService) *INotificationService {
	mock := &INotificationService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
